// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/universal
{
  "name": "Debian-based Dev Container with Podman",
  
  // Build the container using the specified Dockerfile
  "build": {
    "dockerfile": "Containerfile",
    "context": "..",
    "tags": [
      "kunihiros/${localWorkspaceFolderBasename}:latest"
    ]
  },

  // Add useful features to the container
  "features": {
    // Common development tools (git, sudo, etc.)
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": "false",
      "configureZshAsDefaultShell": "false",
      "installOhMyZsh": "false",
      "upgradePackages": "true"
    },
    // GitHub CLI for interacting with GitHub
    "ghcr.io/devcontainers/features/github-cli:1": {},
    // Node.js LTS with corepack for package manager management
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts"
    }
  },

  // Commands to run when the container is first created
  "onCreateCommand": "bash -l -c 'chmod +x ./.devcontainer/setup_gish.sh && sudo bash ./.devcontainer/setup_gish.sh && sudo env \"PATH=$PATH\" corepack enable pnpm'",

  // Commands to run each time the container is attached
  "postAttachCommand": "chmod +x ./.devcontainer/post_attach.sh && bash ./.devcontainer/post_attach.sh",

  // Commands to run on the host before container creation
  "initializeCommand": "bash -ic 'echo OPENAI_API_KEY=\"$OPENAI_API_KEY\" > ./.devcontainer/.env.tmp'",

  // Automatically add a timestamp tag to the image after the container starts.
  // This command runs on the HOST machine and is idempotent.
  "postStartCommand": "bash -c '\nLATEST_IMAGE_ID=$(podman inspect --format '{{.Id}}' kunihiros/${localWorkspaceFolderBasename}:latest)\n# Check if any tag with a timestamp format already exists for this image ID\nif ! podman images --no-trunc | grep \"$LATEST_IMAGE_ID\" | grep -qE ':[0-9]{14}' ; then\n  TIMESTAMP=$(date +%Y%m%d%H%M%S)\n  echo \"Tagging new image ${LATEST_IMAGE_ID} with timestamp ${TIMESTAMP}...\"\n  podman tag \"$LATEST_IMAGE_ID\" \"kunihiros/${localWorkspaceFolderBasename}:${TIMESTAMP}\"\nfi'",

  // Environment variables for the container
  "containerEnv": {
    "GISH_TOOLS_DIR": "/usr/local/share/gish-tools"
  },
  // コンテナ作成後に実行するコマンド。gishのインストール確認に使います。
  "postCreateCommand": "npm install -g @google/gemini-cli && gish --help",

  // VS Code固有のカスタマイズ
  "customizations": {
    "vscode": {
      // ターミナルのデフォルトシェルをbashに設定
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash"
      },
      // コンテナ内で自動的にインストールするVS Code拡張機能
      "extensions": [
        "batisteo.vscode-django",
        "bierner.markdown-mermaid",
        "chrisdias.vscode-opennewinstance",
        "christian-kohler.path-intellisense",
        "dae.vscode-mac-color-picker",
        "donjayamanne.python-environment-manager",
        "donjayamanne.python-extension-pack",
        "enkia.tokyo-night",
        "gera2ld.markmap-vscode",
        "gitguardian-secret-security.gitguardian",
        "github.copilot",
        "github.copilot-chat",
        "github.remotehub",
        "github.vscode-github-actions",
        "google.geminicodeassist",
        "henriquebruno.github-repository-manager",
        "kevinrose.vsc-python-indent",
        "kilocode.kilo-code",
        "kunihiros.annoblue",
        "kunihiros.mahouyo-alice-color-theme",
        "kunihiros.tsukihime-bloodymoon-color-theme",
        "marp-team.marp-vscode",
        "ms-azuretools.vscode-containers",
        "ms-azuretools.vscode-docker",
        "ms-python.debugpy",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-ssh-edit",
        "ms-vscode-remote.vscode-remote-extensionpack",
        "ms-vscode.azure-repos",
        "ms-vscode.remote-explorer",
        "ms-vscode.remote-repositories",
        "ms-vscode.remote-server",
        "njpwerner.autodocstring",
        "oderwat.indent-rainbow",
        "ritwickdey.liveserver",
        "saoudrizwan.claude-dev",
        "sleistner.vscode-fileutils",
        "streetsidesoftware.code-spell-checker",
        "visualstudioexptteam.intellicode-api-usage-examples",
        "visualstudioexptteam.vscodeintellicode",
        "wholroyd.jinja"
      ]
    }
  }
}
